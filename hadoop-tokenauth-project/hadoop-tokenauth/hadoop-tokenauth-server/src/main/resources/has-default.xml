<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!-- Do not modify this file directly.  Instead, copy entries that you -->
<!-- wish to modify from this file into core-site.xml and change them -->
<!-- there.  If core-site.xml does not already exist, create it.      -->

<configuration>

  <property>
    <name>hadoop.security.tokenauth.authenticators</name>
    <value></value>
    <description>A comma separated list of authentications names. Each item 
    in the list must be a login module. These authenticators compose
    an authentication chain, the ordering of the list defines the 
  	ordering of the authentications. 'ldap', 'kerberos' are supported.</description>
  </property>

  <property>
    <name>hadoop.security.tokenauth.authenticator.ldap.controlflag</name>
    <value>required</value>
    <description>Java login module control flag for LDAP authenticator. 
    The value can be one of 'required', 'requisite', 'sufficient', 'optional'</description>
  </property>
  
  <!-- LDAP configuration -->
  <property>
    <name>hadoop.security.tokenauth.ldap.url</name>
    <value></value>
    <description>LDAP host url, e.g. ldap://ldap.my-domain.com:389</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.ldap.ssl</name>
    <value>false</value>
    <description>Whether the ldap server enables ssl</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.ldap.ssl.keystore</name>
    <value></value>
    <description>keystore for ldap ssl</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.ldap.ssl.keystore.password</name>
    <value></value>
    <description>password of keystore for ldap ssl</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.ldap.bind.user</name>
    <value></value>
    <description>ldap bind user</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.ldap.bind.password</name>
    <value></value>
    <description>ldap bind password</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.ldap.bind.password.file</name>
    <value></value>
    <description>ldap bind password file</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.ldap.base.dn</name>
    <value></value>
    <description>ldap base dn. e.g. CN=Users,DC=DOMAIN,DC=com</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.ldap.user.search.filter</name>
    <value>(&amp;(objectClass=user)(sAMAccountName={0}))</value>
    <description>ldap user search filter</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.ldap.group.search.filter</name>
    <value>(objectClass=group)</value>
    <description>ldap group search filter</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.ldap.group.name.attr</name>
    <value>cn</value>
    <description>ldap group name attribute</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.ldap.group.membership.attr</name>
    <value>member</value>
    <description>ldap group member ship attribute</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.ldap.query.attrs</name>
    <value></value>
    <description>A comma separated list of attributes names. These attributes
    will be retrieved after authentication.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.ldap.directory.search.timeout</name>
    <value>10000</value>
    <description>ldap search timeout, in millisecond</description>
  </property>
  <!-- LDAP configuration -->
  
  <property>
    <name>hadoop.security.tokenauth.identity.server.keytab</name>
    <value></value>
    <description>Identity server keytab for there is kerberos login module.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.identity.server.principal</name>
    <value></value>
    <description>Identity server principal for there is kerberos login module.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.identity.server.http.keytab</name>
    <value></value>
    <description>Identity server http keytab for there is kerberos login module.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.identity.server.http.principal</name>
    <value></value>
    <description>Identity server http principal for there is kerberos login module.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.secretsmanager.keystore</name>
    <value></value>
    <description>The keystore to save secrets.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.secretsmanager.keystore.secret.file</name>
    <value></value>
    <description>The password file of keystore to save secrets.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.authorization.server.principal</name>
    <value></value>
    <description>authorization server principal for token auth.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.authorization.server.authentication.file</name>
    <value></value>
    <description>authorization server authentication file for token auth.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.identity.token.encrypted</name>
    <value>false</value>
    <description>whether the identity token should be encrypted.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.access.token.encrypted</name>
    <value>false</value>
    <description>whether the authorization token should be encrypted.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.identity.token.renewable</name>
    <value>true</value>
    <description>whether identity token is renewable.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.identity.token.max.renew.time</name>
    <value></value>
    <description>max renewable time of identity token.</description>
  </property>
  
 <property>
    <name>hadoop.security.tokenauth.identity.token.max.lifetime</name>
    <value>604800</value>
    <description>max lifetime of identity token. Unit: second</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.identity.token.renew.extension.period</name>
    <value>86400</value>
    <description>When a token is renewed, it's expire time will be extended as
    this value specified. Unit: second.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.identity.server.admin</name>
    <value></value>
    <description>admin of identity server.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.identity.server.listener.thread.count</name>
    <value>50</value>
    <description>identity server listener thread count.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.identity.server.issuedtokens.persistent.file</name>
    <value></value>
    <description>Serialized token list.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.identity.server.issuedtokens.persistent.interval</name>
    <value>3600</value>
    <description>The interval for writing issued tokens to disk. Unit: second.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.authorization.server.listener.thread.count</name>
    <value>50</value>
    <description>authorization server listener thread count.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.identity.service.protocol.acl</name>
    <value></value>
    <description>identity service protocol acl.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.secrets.protocol.acl</name>
    <value></value>
    <description>secrets protocol acl.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.authorization.service.protocol.acl</name>
    <value></value>
    <description>authorization service protocol acl.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.identity.token.expires</name>
    <value></value>
    <description>identity token expires time, in millisecond.</description>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.access.token.expires</name>
    <value></value>
    <description>access token expires time, in millisecond.</description>
  </property>
  
  <property>
  	<name>hadoop.security.tokenauth.authorization.engine.impl</name>
  	<value>org.apache.hadoop.security.tokenauth.authorize.policy.RhinoPolicyEngine</value>
  </property>
  
  <property>
    <name>hadoop.security.tokenauth.authorization.policy</name>
    <value>/authorization-policy-script</value>
  </property>

</configuration>